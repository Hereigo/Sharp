@using DotNet8.Utils
@*
@inject Wangkanai.Detection.Services.IDetectionService DetectionService
(also see in _ViewImports.cshtml)
*@
@model IEnumerable<DotNet8.Models.CalEvent>
@{
    ViewData["Title"] = "Index";
    var now = ViewBag.Today;
    var daysCount = 0;
    var daysInMonth = Utils.GetMaxDayOfTheMonth(now);
    var firstDayOfWeekNum = (int)(new DateTime(now.Year, now.Month, 1).DayOfWeek) - 1;
    var firstDayOfWeek = firstDayOfWeekNum == -1 ? 6 : firstDayOfWeekNum;
    var isCurrentMonth = false;
    var isPrevMonthFinished = false;
    var nowDayOfWeek = (int)(now.DayOfWeek);

    var months = new string[12] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
    var monthPrev = months[DateTime.Now.Month - 2];
    var monthCurrent = months[DateTime.Now.Month - 1];
    var monthNext = months[DateTime.Now.Month];
}

@* <input type="hidden" value="@DetectionService.Device.Type" />
<input type="hidden" value="@DetectionService.Browser.Name" /> *@

<div class="container-fluid">
    <div class="row row-calend">

        <main class="col-md-10">
            <table class="calendar">
                <thead>
                    <tr>
                        <th class='@(nowDayOfWeek==1?"today":"")'> Mon </th>
                        <th class='@(nowDayOfWeek==2?"today":"")'> Tue </th>
                        <th class='@(nowDayOfWeek==3?"today":"")'> Wed </th>
                        <th class='@(nowDayOfWeek==4?"today":"")'> Thu </th>
                        <th class='@(nowDayOfWeek==5?"today":"")'> Fri </th>
                        <th class='@(nowDayOfWeek==6?"today":"")'> Sat </th>
                        <th class='@(nowDayOfWeek==7?"today":"")'> Sun </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int r = 0; r < 6; r++)
                    {
                        <tr>

                            @for (int d = 0; d < 7; d++)
                            {
                                if (d == firstDayOfWeek && firstDayOfWeek == 0) // Mon
                                {
                                    isCurrentMonth = true;
                                    isPrevMonthFinished = true;
                                }
                                else if (d == firstDayOfWeek && !isPrevMonthFinished) // Tue...Sun
                                {
                                    daysCount = 0;
                                    isCurrentMonth = true;
                                    isPrevMonthFinished = true;
                                }
                                if (daysCount == daysInMonth) // Next month.
                                {
                                    daysCount = 0;
                                    isCurrentMonth = false;
                                }
                                daysCount++;

                                var isToday = (isCurrentMonth && now.Day == daysCount) ? "today" : "";

                                var modelItem = Model
                                    .Where(m => m.Started.Day == daysCount && m.Started.Month == now.Month
                                        || (m.Started.Day == daysCount && (m.Repeat == CalEventRepeat.Monthly || m.Repeat == CalEventRepeat.Yearly)))
                                    .ToList();

                                if (!isCurrentMonth)
                                {
                                    <td class="day nextMon"></td>
                                }
                                else
                                {
                                    <td class="day @isToday">

                                        @await Html.PartialAsync("~/Views/Home/EventCalendView.cshtml", modelItem)

                                    </td>
                                }
                            }

                        </tr>
                    }
                </tbody>
            </table>
        </main>

        @* *** SIDEBAR *** *@

        <aside class="col-md-2 sidebar">

            <br />
            <div>
                <a asp-action="Index" asp-route-pMonth="prev" class="btn btn-sm btn-light"> @monthPrev &nbsp; &lt; </a>
                &nbsp;
                <a asp-action="Index" asp-route-pMonth="" class="btn btn-sm btn-light"> @monthCurrent </a>
                &nbsp;
                <a asp-action="Index" asp-route-pMonth="next" class="btn btn-sm btn-light"> &gt; &nbsp; @monthNext </a>
            </div>
            <br />

            <ul>
                <li>Aaaaaaa</li>
                <li>Aaaaaaa</li>
                <li>Aaaaaaa</li>
                <li>Aaaaaaa</li>
                <li>Aaaaaaa</li>
                <li>...</li>
            </ul>
        </aside>

    </div>
</div>
