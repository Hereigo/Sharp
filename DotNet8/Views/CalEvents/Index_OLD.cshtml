@using DotNet8.Utils
@model IEnumerable<DotNet8.Models.CalEventVM>
@{
    ViewData["Title"] = "Index";
    var daysCount = 0;
    var daysInMonth = Utils.GetMaxDayOfTheMonth(DateTime.Now);
}

<style>
    .create-act {
        margin-top: 0;
        padding-top: 0;
    }

    .container-lg {
        margin-top: -17px;
        padding-left: 0px;
        padding-right: 0px;
    }

    .calend td {
        min-width: 11%;
        width: 11%;
        max-width: 11%;
        padding: .1rem;
        height: 10px;
        /* text-overflow: clip; */
    }

    .calend .aDay {
        background-color: #ebebeb;
        border: solid 1px blue;
        border-radius: 4px;
        min-height: 130px;
        /* min-height: 100%; */
        margin: 0;
        padding: 3px;
        width: 100%;
    }

        .calend .aDay .aDayDate {
            border: solid 2px blue;
            border-radius: 4px;
            color: blue;
            float: right;
            margin-right: -5px;
            margin-top: -5px;
            padding-left: 5px;
            padding-right: 5px;
        }

        .calend .aDay .aDayItemLine {
            background-color: lightgrey;
            /* float: left; */
        }
</style>

<div class="create-act">
    <a asp-action="Create">Create New</a>
</div>

<table class="calend" cellspacing="2">
    @for (int r = 0; r < 5; r++)
    {
        <tr>
            @for (int d = 0; d < 7; d++)
            {
                if (daysCount == daysInMonth) daysCount = 0; // next mon.
                daysCount++;
                var modelItem = Model.Where(m => m.DayOfMonth == daysCount).ToList();

                <td>
                    @await Html.PartialAsync("~/Views/CalEvents/EventCalendView.cshtml", Utils.GetCalEventVm(modelItem, daysCount))
                </td>
            }
        </tr>
    }
</table>